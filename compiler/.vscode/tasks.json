{
    "version": "2.0.0",
    "tasks": [
        // Builds 'compiler.sln' solution with default configurations
        {
            "label": "build",
            "command": "dotnet",
            "type": "process",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "args": ["build"],
            "presentation": {
                "focus": true,
                "clear": true
            },
            "problemMatcher": "$msCompile"
        },
        // Builds the specified source project as selected by the user
        {
            "label": "build-csproj",
            "command": "dotnet",
            "type": "process",
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "args": ["build", "${input:csproj}"],
            "presentation": {
                "focus": true,
                "clear": true
            },
            "problemMatcher": "$msCompile"
        },
        // Builds 'compiler.sln' solution and runs the test projects in the solution
        {
            "label": "test",
            "command": "dotnet",
            "type": "process",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "args": ["test"],
            "presentation": {
                "focus": true,
                "clear": true
            },
            "problemMatcher": "$msCompile"
        },
        // Cleans the build outputs of the 'compiler.sln' solution
        {
            "label": "clean",
            "command": "dotnet",
            "type": "process",
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "args": ["clean"],
            "presentation": {
                "focus": true,
                "clear": true
            },
            "problemMatcher": "$msCompile"
        },
        // Builds the specified sample project as selected by the user
        {
            "label": "build-msproj",
            "command": "dotnet",
            "type": "process",
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/samples"
            },
            "args": ["build", "${input:msproj}"],
            "presentation": {
                "focus": true,
                "clear": true
            },
            "problemMatcher": {
                "owner": "compiler",
                "fileLocation": "absolute",
                "pattern": [
                    {
                        "regexp": "^(.+)\\((\\d+,\\d+,\\d+,\\d+)\\):\\s+(.+)$",
                        "file": 1,
                        "location": 2,
                        "message": 3
                    }
                ]
            }
        },
        // Builds and Runs the specified sample project as selected by the user
        {
            "label": "run-msproj",
            "command": "dotnet",
            "type": "process",
            "options": {
                "cwd": "${workspaceFolder}/samples"
            },
            "args": ["run", "--project", "${input:msproj}"],
            "presentation": {
                "focus": true,
                "clear": true
            },
            "problemMatcher": {
                "owner": "compiler",
                "fileLocation": "absolute",
                "pattern": [
                    {
                        "regexp": "^(.+)\\((\\d+,\\d+,\\d+,\\d+)\\):\\s+(.+)$",
                        "file": 1,
                        "location": 2,
                        "message": 3
                    }
                ]
            }
        },
        // Builds and Runs the Compiler compiler with the currently opened file's folder path
        {
            "label": "Runner",
            "command": "dotnet",
            "type": "process",
            "options": {
                "cwd": "${workspaceFolder}/samples"
            },
            "args": [
                "run",
                "--project",
                "${workspaceFolder}/src/Runner",
                "--",
                "${fileDirname}"
            ],
            "presentation": {
                "focus": true,
                "clear": true
            },
            "problemMatcher": {
                "owner": "compiler",
                "fileLocation": "absolute",
                "pattern": [
                    {
                        "regexp": "^(.+)\\((\\d+,\\d+,\\d+,\\d+)\\):\\s+(.+)$",
                        "file": 1,
                        "location": 2,
                        "message": 3
                    }
                ]
            }
        },
        // Builds and Runs the Compiler interpreter
        {
            "label": "Inputer",
            "command": "dotnet",
            "type": "process",
            "isBackground": true,
            "options": {
                "cwd": "${workspaceFolder}/samples"
            },
            "args": ["run", "--project", "${workspaceFolder}/src/Inputer"],
            "presentation": {
                "clear": true,
                "focus": true
            },
            "problemMatcher": []
        }
    ],
    "inputs": [
        // Inputs for the source projects. Be sure to update the list if you've added new project(s).
        {
            "id": "csproj",
            "type": "pickString",
            "description": "Pick your Source project",
            "options": [
                "Runner",
                "Inputer",
                "Compiler",
                "Compiler.Generators",
                "Tests"
            ],
            "default": "Runner"
        },
        // Inputs for the sample projects. Be sure to update the list if you've added new project(s).
        {
            "id": "msproj",
            "type": "pickString",
            "description": "Pick your Sample compiler project",
            "options": ["hello"],
            "default": "hello"
        }
    ]
}
